name: Branch Protection

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  checks: read
  statuses: read

jobs:
  enforce-branch-protection:
    name: 🛡️ Enforce Branch Protection
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check required status checks
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const { owner, repo } = context.repo;
            const sha = pr.head.sha;
            
            console.log(`Checking PR #${pr.number} (${sha})`);
            
            // Required checks that must pass before merge - only essential ones
            const requiredChecks = [
              '🔍 Lint Code'
            ];
            
            // Get all status checks and check runs
            const [statusesResponse, checkRunsResponse] = await Promise.all([
              github.rest.repos.listCommitStatusesForRef({ owner, repo, ref: sha }),
              github.rest.checks.listForRef({ owner, repo, ref: sha })
            ]);
            
            const statuses = statusesResponse.data;
            const checkRuns = checkRunsResponse.data.check_runs;
            
            console.log('Available check runs:', checkRuns.map(c => `${c.name}: ${c.conclusion}`));
            console.log('Available statuses:', statuses.map(s => `${s.context}: ${s.state}`));
            
            // Check for test jobs (they have dynamic names with Node versions)
            const testJobs = checkRuns.filter(c => c.name.startsWith('🧪 Test on Node'));
            const passingTestJobs = testJobs.filter(c => c.conclusion === 'success');
            
            console.log(`Found ${testJobs.length} test jobs, ${passingTestJobs.length} passing`);
            
            // Check if all required checks are passing
            const failedChecks = requiredChecks.filter(checkName => {
              const status = statuses.find(s => s.context === checkName && s.state === 'success');
              const checkRun = checkRuns.find(c => c.name === checkName && c.conclusion === 'success');
              return !status && !checkRun;
            });
            
            // Require at least one test job to pass (they run on different Node versions)
            const hasPassingTests = passingTestJobs.length > 0;
            
            if (failedChecks.length === 0 && hasPassingTests) {
              console.log('✅ All required checks passed');
            } else {
              const issues = [];
              if (failedChecks.length > 0) {
                issues.push(`Failed checks: ${failedChecks.join(', ')}`);
              }
              if (!hasPassingTests) {
                issues.push('No passing test jobs found');
              }
              console.log(`❌ ${issues.join('; ')}`);
              core.setFailed(issues.join('; '));
            }

  merge-gate:
    name: 🚪 Merge Gate
    runs-on: ubuntu-latest
    needs: enforce-branch-protection
    if: github.event_name == 'pull_request'
    steps:
      - name: Gate check
        run: echo "Merge gate passed" 